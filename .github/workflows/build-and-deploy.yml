name: Build and upload to PyPI

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-13, windows-latest ]
        arch: [ x86_64 ]
        include:
          - os: ubuntu-24.04-arm
            arch: aarch64
          - os: ubuntu-22.04-arm
            arch: aarch64
          - os: macos-15
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0rc3
        env:
          # For Windows: Build only 64-bit wheels to avoid architecture mismatch with dependencies.
          CIBW_ARCHS_WINDOWS: "AMD64"
          # For Linux ARM64: Tell the C++ compiler to treat `char` as signed to fix pymeshfix compilation.
          CIBW_TEST_ENVIRONMENT_LINUX: "CXXFLAGS='-fsigned-char'"

      - uses: actions/upload-artifact@v4
        with:
          # Include the architecture in the artifact name to prevent overwrites
          name: tetgen-wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build sdist
        run: pipx run build --sdist

      - name: Install package from sdist
        run: pip install dist/*.tar.gz

      - name: Install test requirements
        # On x86_64 this flag is harmless but good practice for ensuring sdist tests are robust
        run: CXXFLAGS="-fsigned-char" pip install -r requirements_test.txt

      - name: Run tests
        run: pytest

      - uses: actions/upload-artifact@v4
        with:
          name: tetgen-sdist
          path: dist/*.tar.gz


  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tetgen
    permissions:
      id-token: write  # this permission is mandatory for trusted publishing
      contents: write  # required to create a release
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts # Download all artifacts into a single directory
      - name: Flatten directory structure
        run: |
          mkdir -p dist/
          find artifacts -name '*.whl' -exec mv {} dist/ \;
          find artifacts -name '*.tar.gz' -exec mv {} dist/ \;
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            dist/*.whl
            dist/*.tar.gz
